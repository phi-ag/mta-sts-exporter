name: Release Please

on:
  push:
    branches:
      - main
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@cc61a07e2da466bebbc19b3a7dd01d6aecb20d1e # v4
        id: release

      - name: Checkout
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Setup Go
        if: ${{ steps.release.outputs.release_created }}
        uses: ./.github/actions/setup-go

      - name: Login to Docker Hub
        if: ${{ steps.release.outputs.release_created }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup ko
        if: ${{ steps.release.outputs.release_created }}
        uses: ko-build/setup-ko@ace48d793556083a76f1e3e6068850c1f4a369aa # v0.6
        env:
          KO_DOCKER_REPO: ${{ secrets.DOCKERHUB_USERNAME }}

      - name: Publish
        if: ${{ steps.release.outputs.release_created }}
        run: >
          ko build
          --base-import-paths
          --tags latest,${{ steps.release.outputs.major }},${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }},${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
          --image-label org.opencontainers.image.created=$(date +'%Y-%m-%dT%H:%M:%S'),org.opencontainers.image.revision=${{ github.sha }}",org.opencontainers.image.version=${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}",org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
        env:
          KO_DEFAULTPLATFORMS: all
          #KO_DEFAULTPLATFORMS: linux/arm64,linux/amd64
